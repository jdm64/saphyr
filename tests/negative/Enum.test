
enum Color
{
	Red, Green, Blue
}

enum Dir
{
	N, S, E, W
}

int global;

enum Broken
{
	A = 3 + global, B = 3.4, A = 2, C{2, 5}
}

enum BadBase<[3]int>
{
	XX, YY
}

int main()
{
	auto a = Color.Red, b = Dir.S;

	auto c = a + b;

	auto d = c.N;

	Dir ee = Color.Red;

	return Color.NotFound;
}

========

negative/Enum.syp:16:8: enum initializer must be a constant
negative/Enum.syp:16:22: enum initializer must be an int-like constant
negative/Enum.syp:16:27: enum member name A already declared
negative/Enum.syp:16:34: enum initializer list only supports a single value
negative/Enum.syp:19:14: enum base type must be an integer type
negative/Enum.syp:30:11: int32 is not a struct/union/enum
negative/Enum.syp:32:6: Cannot cast to enum ( Color to Dir )
negative/Enum.syp:34:15: Color doesn't have member NotFound
found 8 errors
