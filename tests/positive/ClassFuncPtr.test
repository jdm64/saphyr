
union U
{
	@()void f;
}

struct S
{
	@()void f;
}

class C
{
	struct this
	{
		@()void f;
	}

	void func()
	{
	}
}

void func2()
{
	@S a;
	@U b;
	@C c;

	a.f();
	b.f();
	c.f();
	c.func();
}

========

%C = type { void ()* }
%S = type { void ()* }
%U = type { void ()* }

define void @C_func(%C* %this) {
  %1 = alloca %C*
  store %C* %this, %C** %1
  ret void
}

define void @func2() {
  %a = alloca %S*
  %b = alloca %U*
  %c = alloca %C*
  %1 = load %S*, %S** %a
  %2 = getelementptr %S, %S* %1, i32 0, i32 0
  %3 = load void ()*, void ()** %2
  call void %3()
  %4 = load %U*, %U** %b
  %5 = bitcast %U* %4 to void ()**
  %6 = load void ()*, void ()** %5
  call void %6()
  %7 = load %C*, %C** %c
  %8 = getelementptr %C, %C* %7, i32 0, i32 0
  %9 = load void ()*, void ()** %8
  call void %9()
  %10 = load %C*, %C** %c
  call void @C_func(%C* %10)
  ret void
}

========

C_func T
func2 T
