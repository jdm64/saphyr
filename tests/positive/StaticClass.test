
class Foo
{
	struct this
	{
		int a;
	}

	#[static]
	int bar(int v)
	{
		return v + 3;
	}

	#[static]
	int test()
	{
		return bar(1);
	}

	void run()
	{
		test();
	}
}

void bla()
{
	Foo f;

	f.test();
	Foo.bar(4);
}

========

%Foo = type { i32 }

define i32 @Foo_bar(i32 %v) {
  %1 = alloca i32
  store i32 %v, i32* %1
  %2 = load i32, i32* %1
  %3 = add i32 %2, 3
  ret i32 %3
}

define i32 @Foo_test() {
  %1 = call i32 @Foo_bar(i32 1)
  ret i32 %1
}

define void @Foo_run(%Foo* %this) {
  %1 = alloca %Foo*
  store %Foo* %this, %Foo** %1
  %2 = load %Foo*, %Foo** %1
  %3 = call i32 @Foo_test()
  ret void
}

define void @bla() {
  %f = alloca %Foo
  %1 = call i32 @Foo_test()
  %2 = call i32 @Foo_bar(i32 4)
  ret void
}

========

bla T
Foo_bar T
Foo_run T
Foo_test T
