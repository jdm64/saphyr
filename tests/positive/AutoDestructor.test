
class Destroy
{
	struct this
	{
		@[]int arr;
	}

	int get(int idx)
	{
		return arr[idx];
	}

	~this()
	{
		delete arr;
	}
}

void oneItem()
{
	Destroy d;
}

void branchDestroy(int b)
{
	Destroy d;

	if (b)
		return;

	d.get(3);
}

void manyItems()
{
	[5]Destroy arr;
}

void manyPointerItems()
{
	int size = 5;
	@[]Destroy arr = new [size]Destroy;

	delete[size] arr;
}

void manyPointerWithSize()
{
	@[3]Destroy arr = new [3]Destroy;

	delete arr;
}

[4]Destroy noDestroy(&[9]Destroy in)
{
	[4]Destroy ret;

	return ret->move;
}

void loopStm(int i)
{
	loop
		Destroy d;
}

void whileStm(int i)
{
	while (i > 5) {
		Destroy d;
		if (i > 3) {
			Destroy f;
			if (i > 2)
				break;
		}
	}
}

void forStm()
{
	for (int i = 0; i < 4; i++)
		Destroy d;
}

void ifStm(int i)
{
	if (i < 8)
		Destroy d;
	else
		Destroy g;
}

========

%Destroy = type { [0 x i32]* }

define i32 @Destroy_get(%Destroy* %this, i32 %idx) {
  %1 = alloca %Destroy*
  store %Destroy* %this, %Destroy** %1
  %2 = alloca i32
  store i32 %idx, i32* %2
  %3 = load i32, i32* %2
  %4 = load %Destroy*, %Destroy** %1
  %5 = getelementptr %Destroy, %Destroy* %4, i32 0, i32 0
  %6 = load [0 x i32]*, [0 x i32]** %5
  %7 = sext i32 %3 to i64
  %8 = getelementptr [0 x i32], [0 x i32]* %6, i32 0, i64 %7
  %9 = load i32, i32* %8
  ret i32 %9
}

define void @Destroy_null(%Destroy* %this) {
  %1 = alloca %Destroy*
  store %Destroy* %this, %Destroy** %1
  %2 = load %Destroy*, %Destroy** %1
  %3 = getelementptr %Destroy, %Destroy* %2, i32 0, i32 0
  %4 = load [0 x i32]*, [0 x i32]** %3
  %5 = bitcast [0 x i32]* %4 to i8*
  call void @free(i8* %5)
  ret void
}

declare void @free(i8*)

define void @oneItem() {
  %d = alloca %Destroy
  call void @Destroy_null(%Destroy* %d)
  ret void
}

define void @branchDestroy(i32 %b) {
  %1 = alloca i32
  store i32 %b, i32* %1
  %d = alloca %Destroy
  %2 = load i32, i32* %1
  %3 = icmp ne i32 %2, 0
  br i1 %3, label %4, label %5

4:                                                ; preds = %0
  call void @Destroy_null(%Destroy* %d)
  ret void

5:                                                ; preds = %0
  %6 = call i32 @Destroy_get(%Destroy* %d, i32 3)
  call void @Destroy_null(%Destroy* %d)
  ret void
}

define void @manyItems() {
  %arr = alloca [5 x %Destroy]
  %1 = getelementptr [5 x %Destroy], [5 x %Destroy]* %arr, i32 0, i32 0
  %2 = getelementptr %Destroy, %Destroy* %1, i64 5
  %3 = icmp eq %Destroy* %1, %2
  br i1 %3, label %8, label %4

4:                                                ; preds = %4, %0
  %5 = phi %Destroy* [ %1, %0 ], [ %6, %4 ]
  call void @Destroy_null(%Destroy* %5)
  %6 = getelementptr %Destroy, %Destroy* %5, i64 1
  %7 = icmp eq %Destroy* %6, %2
  br i1 %7, label %8, label %4

8:                                                ; preds = %4, %0
  ret void
}

define void @manyPointerItems() {
  %size = alloca i32
  store i32 5, i32* %size
  %1 = load i32, i32* %size
  %2 = sext i32 %1 to i64
  %3 = mul i64 8, %2
  %4 = call i8* @malloc(i64 %3)
  %5 = bitcast i8* %4 to [0 x %Destroy]*
  %arr = alloca [0 x %Destroy]*
  store [0 x %Destroy]* %5, [0 x %Destroy]** %arr
  %6 = load i32, i32* %size
  %7 = load [0 x %Destroy]*, [0 x %Destroy]** %arr
  %8 = getelementptr [0 x %Destroy], [0 x %Destroy]* %7, i32 0, i32 0
  %9 = getelementptr %Destroy, %Destroy* %8, i32 %6
  %10 = icmp eq %Destroy* %8, %9
  br i1 %10, label %15, label %11

11:                                               ; preds = %11, %0
  %12 = phi %Destroy* [ %8, %0 ], [ %13, %11 ]
  call void @Destroy_null(%Destroy* %12)
  %13 = getelementptr %Destroy, %Destroy* %12, i64 1
  %14 = icmp eq %Destroy* %13, %9
  br i1 %14, label %15, label %11

15:                                               ; preds = %11, %0
  %16 = bitcast [0 x %Destroy]* %7 to i8*
  call void @free(i8* %16)
  ret void
}

declare i8* @malloc(i64)

define void @manyPointerWithSize() {
  %1 = call i8* @malloc(i64 24)
  %2 = bitcast i8* %1 to [3 x %Destroy]*
  %arr = alloca [3 x %Destroy]*
  store [3 x %Destroy]* %2, [3 x %Destroy]** %arr
  %3 = load [3 x %Destroy]*, [3 x %Destroy]** %arr
  %4 = getelementptr [3 x %Destroy], [3 x %Destroy]* %3, i32 0, i32 0
  %5 = getelementptr %Destroy, %Destroy* %4, i64 3
  %6 = icmp eq %Destroy* %4, %5
  br i1 %6, label %11, label %7

7:                                                ; preds = %7, %0
  %8 = phi %Destroy* [ %4, %0 ], [ %9, %7 ]
  call void @Destroy_null(%Destroy* %8)
  %9 = getelementptr %Destroy, %Destroy* %8, i64 1
  %10 = icmp eq %Destroy* %9, %5
  br i1 %10, label %11, label %7

11:                                               ; preds = %7, %0
  %12 = bitcast [3 x %Destroy]* %3 to i8*
  call void @free(i8* %12)
  ret void
}

define [4 x %Destroy] @noDestroy([9 x %Destroy]* %in) {
  %1 = alloca [9 x %Destroy]*
  store [9 x %Destroy]* %in, [9 x %Destroy]** %1
  %ret = alloca [4 x %Destroy]
  %2 = load [4 x %Destroy], [4 x %Destroy]* %ret
  ret [4 x %Destroy] %2
}

define void @loopStm(i32 %i) {
  %1 = alloca i32
  store i32 %i, i32* %1
  br label %2

2:                                                ; preds = %2, %0
  %d = alloca %Destroy
  call void @Destroy_null(%Destroy* %d)
  br label %2
}

define void @whileStm(i32 %i) {
  %1 = alloca i32
  store i32 %i, i32* %1
  br label %2

2:                                                ; preds = %13, %0
  %3 = load i32, i32* %1
  %4 = icmp sgt i32 %3, 5
  br i1 %4, label %5, label %14

5:                                                ; preds = %2
  %d = alloca %Destroy
  %6 = load i32, i32* %1
  %7 = icmp sgt i32 %6, 3
  br i1 %7, label %8, label %13

8:                                                ; preds = %5
  %f = alloca %Destroy
  %9 = load i32, i32* %1
  %10 = icmp sgt i32 %9, 2
  br i1 %10, label %11, label %12

11:                                               ; preds = %8
  call void @Destroy_null(%Destroy* %f)
  call void @Destroy_null(%Destroy* %d)
  br label %14

12:                                               ; preds = %8
  call void @Destroy_null(%Destroy* %f)
  br label %13

13:                                               ; preds = %12, %5
  call void @Destroy_null(%Destroy* %d)
  br label %2

14:                                               ; preds = %11, %2
  ret void
}

define void @forStm() {
  %i = alloca i32
  store i32 0, i32* %i
  br label %1

1:                                                ; preds = %5, %0
  %2 = load i32, i32* %i
  %3 = icmp slt i32 %2, 4
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %d = alloca %Destroy
  br label %5

5:                                                ; preds = %4
  %6 = load i32, i32* %i
  %7 = add i32 %6, 1
  store i32 %7, i32* %i
  call void @Destroy_null(%Destroy* %d)
  br label %1

8:                                                ; preds = %1
  ret void
}

define void @ifStm(i32 %i) {
  %1 = alloca i32
  store i32 %i, i32* %1
  %2 = load i32, i32* %1
  %3 = icmp slt i32 %2, 8
  br i1 %3, label %4, label %5

4:                                                ; preds = %0
  %d = alloca %Destroy
  call void @Destroy_null(%Destroy* %d)
  br label %6

5:                                                ; preds = %0
  %g = alloca %Destroy
  call void @Destroy_null(%Destroy* %g)
  br label %6

6:                                                ; preds = %5, %4
  ret void
}

========

branchDestroy T
Destroy_get T
Destroy_null T
forStm T
free U
ifStm T
loopStm T
malloc U
manyItems T
manyPointerItems T
manyPointerWithSize T
noDestroy T
oneItem T
whileStm T
