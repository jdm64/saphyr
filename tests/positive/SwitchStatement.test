
const int GLOB = 9;

enum Color
{
	RED, GREEN, BLUE
}

void switchWithDefault(int x)
{
	switch (x) {
	case 4:
		x = 3;
	case 6:
		x = 1;
		break;
	default:
		x = 7;
		break;
	}
}

double switchNoDefault(float x)
{
	switch (x->as(int)) {
	case 1:
		x = 4;
	case 3:
		x = 6;
		break;
	}
	return x;	
}

int main()
{
	switchWithDefault(7);
	auto x = switchNoDefault(false);

	return x;
}

void switchWithExpressions(int val)
{
	switch (val) {
	case 2 + 2:
		val++;
		break;
	case GLOB:
		val += GLOB;
		break;
	case Color.BLUE:
		val *= Color.BLUE;
		break;
	}
}

int usingChar(int8 c)
{
	switch (c) {
	case 'y':
		return 1;
	case 'n':
		return 0;
	default:
		return 100;
	}
	return -200;
}

class Destroy
{
	struct this
	{
		@int ptr;
	}

	~this()
	{
		delete ptr;
	}
}

void withDestructor(int v)
{
	for (int i = 0; i < 10; i++) {
		switch (v) {
		case 1:
		case 3:
			Destroy d;
			break;
		case 2:
			Destroy b;
		}
	}
}

========

%Destroy = type { i32* }

@GLOB = constant i32 9

define void @switchWithDefault(i32 %x) {
  %1 = alloca i32
  store i32 %x, i32* %1
  %2 = load i32, i32* %1
  switch i32 %2, label %5 [
    i32 4, label %3
    i32 6, label %4
  ]

3:                                                ; preds = %0
  store i32 3, i32* %1
  br label %4

4:                                                ; preds = %0, %3
  store i32 1, i32* %1
  br label %6

5:                                                ; preds = %0
  store i32 7, i32* %1
  br label %6

6:                                                ; preds = %5, %4
  ret void
}

define double @switchNoDefault(float %x) {
  %1 = alloca float
  store float %x, float* %1
  %2 = load float, float* %1
  %3 = fptosi float %2 to i32
  switch i32 %3, label %6 [
    i32 1, label %4
    i32 3, label %5
  ]

4:                                                ; preds = %0
  store float 4.000000e+00, float* %1
  br label %5

5:                                                ; preds = %0, %4
  store float 6.000000e+00, float* %1
  br label %6

6:                                                ; preds = %0, %5
  %7 = load float, float* %1
  %8 = fpext float %7 to double
  ret double %8
}

define i32 @main() {
  call void @switchWithDefault(i32 7)
  %1 = call double @switchNoDefault(float 0.000000e+00)
  %x = alloca double
  store double %1, double* %x
  %2 = load double, double* %x
  %3 = fptosi double %2 to i32
  ret i32 %3
}

define void @switchWithExpressions(i32 %val) {
  %1 = alloca i32
  store i32 %val, i32* %1
  %2 = load i32, i32* %1
  switch i32 %2, label %12 [
    i32 4, label %3
    i32 9, label %6
    i32 2, label %9
  ]

3:                                                ; preds = %0
  %4 = load i32, i32* %1
  %5 = add i32 %4, 1
  store i32 %5, i32* %1
  br label %12

6:                                                ; preds = %0
  %7 = load i32, i32* %1
  %8 = add i32 %7, 9
  store i32 %8, i32* %1
  br label %12

9:                                                ; preds = %0
  %10 = load i32, i32* %1
  %11 = mul i32 %10, 2
  store i32 %11, i32* %1
  br label %12

12:                                               ; preds = %0, %9, %6, %3
  ret void
}

define i32 @usingChar(i8 %c) {
  %1 = alloca i8
  store i8 %c, i8* %1
  %2 = load i8, i8* %1
  switch i8 %2, label %5 [
    i8 121, label %3
    i8 110, label %4
  ]

3:                                                ; preds = %0
  ret i32 1

4:                                                ; preds = %0
  ret i32 0

5:                                                ; preds = %0
  ret i32 100
}

define void @Destroy_null(%Destroy* %this) {
  %1 = alloca %Destroy*
  store %Destroy* %this, %Destroy** %1
  %2 = load %Destroy*, %Destroy** %1
  %3 = getelementptr %Destroy, %Destroy* %2, i32 0, i32 0
  %4 = load i32*, i32** %3
  %5 = bitcast i32* %4 to i8*
  call void @free(i8* %5)
  ret void
}

declare void @free(i8*)

define void @withDestructor(i32 %v) {
  %1 = alloca i32
  store i32 %v, i32* %1
  %i = alloca i32
  store i32 0, i32* %i
  br label %2

2:                                                ; preds = %9, %0
  %3 = load i32, i32* %i
  %4 = icmp slt i32 %3, 10
  br i1 %4, label %5, label %12

5:                                                ; preds = %2
  %6 = load i32, i32* %1
  switch i32 %6, label %9 [
    i32 1, label %7
    i32 3, label %7
    i32 2, label %8
  ]

7:                                                ; preds = %5, %5
  %d = alloca %Destroy
  call void @Destroy_null(%Destroy* %d)
  br label %9

8:                                                ; preds = %5
  %b = alloca %Destroy
  call void @Destroy_null(%Destroy* %b)
  br label %9

9:                                                ; preds = %7, %5, %8
  %10 = load i32, i32* %i
  %11 = add i32 %10, 1
  store i32 %11, i32* %i
  br label %2

12:                                               ; preds = %2
  ret void
}

========

Destroy_null T
free U
GLOB R
main T
switchNoDefault T
switchWithDefault T
switchWithExpressions T
usingChar T
withDestructor T
