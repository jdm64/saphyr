
double other()
{
	uint64 a = 7;
	int32 b = 3;
	int16 c = 5;

	a += c;

	return a / b;
}

int main()
{
	uint8 a = 4;
	uint b = 6;
	uint16 c = 7;
	uint32 d = 9;

	d += b + c;

	return a % b;
}

========

define double @other() {
  %a = alloca i64
  store i64 7, i64* %a
  %b = alloca i32
  store i32 3, i32* %b
  %c = alloca i16
  store i16 5, i16* %c
  %1 = load i16, i16* %c
  %2 = load i64, i64* %a
  %3 = sext i16 %1 to i64
  %4 = add i64 %2, %3
  store i64 %4, i64* %a
  %5 = load i64, i64* %a
  %6 = load i32, i32* %b
  %7 = sext i32 %6 to i64
  %8 = udiv i64 %5, %7
  %9 = uitofp i64 %8 to double
  ret double %9
}

define i32 @main() {
  %a = alloca i8
  store i8 4, i8* %a
  %b = alloca i32
  store i32 6, i32* %b
  %c = alloca i16
  store i16 7, i16* %c
  %d = alloca i32
  store i32 9, i32* %d
  %1 = load i32, i32* %b
  %2 = load i16, i16* %c
  %3 = zext i16 %2 to i32
  %4 = add i32 %1, %3
  %5 = load i32, i32* %d
  %6 = add i32 %5, %4
  store i32 %6, i32* %d
  %7 = load i8, i8* %a
  %8 = load i32, i32* %b
  %9 = zext i8 %7 to i32
  %10 = urem i32 %9, %8
  ret i32 %10
}

========

CPI0_0 r
CPI0_1 r
main T
other T
