
void uintCmp()
{
	uint f = 39;
	int8 d = 50;
	bool a;

	a = f < d;
	a = d > f;
	a = f <= d;
	a = f >= d;
	a = f != d;
	a = f == d;
}

int main()
{
	int f = 39;
	uint8 d = 50;
	bool a;

	a = f < d;
	a = d > f;
	a = f <= d;
	a = f >= d;
	a = f != d;
	a = f == d;

	return a;
}

========

define void @uintCmp() {
  %f = alloca i32
  store i32 39, i32* %f
  %d = alloca i8
  store i8 50, i8* %d
  %a = alloca i1
  %1 = load i32, i32* %f
  %2 = load i8, i8* %d
  %3 = sext i8 %2 to i32
  %4 = icmp ult i32 %1, %3
  store i1 %4, i1* %a
  %5 = load i8, i8* %d
  %6 = load i32, i32* %f
  %7 = sext i8 %5 to i32
  %8 = icmp ugt i32 %7, %6
  store i1 %8, i1* %a
  %9 = load i32, i32* %f
  %10 = load i8, i8* %d
  %11 = sext i8 %10 to i32
  %12 = icmp ule i32 %9, %11
  store i1 %12, i1* %a
  %13 = load i32, i32* %f
  %14 = load i8, i8* %d
  %15 = sext i8 %14 to i32
  %16 = icmp uge i32 %13, %15
  store i1 %16, i1* %a
  %17 = load i32, i32* %f
  %18 = load i8, i8* %d
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %17, %19
  store i1 %20, i1* %a
  %21 = load i32, i32* %f
  %22 = load i8, i8* %d
  %23 = sext i8 %22 to i32
  %24 = icmp eq i32 %21, %23
  store i1 %24, i1* %a
  ret void
}

define i32 @main() {
  %f = alloca i32
  store i32 39, i32* %f
  %d = alloca i8
  store i8 50, i8* %d
  %a = alloca i1
  %1 = load i32, i32* %f
  %2 = load i8, i8* %d
  %3 = zext i8 %2 to i32
  %4 = icmp slt i32 %1, %3
  store i1 %4, i1* %a
  %5 = load i8, i8* %d
  %6 = load i32, i32* %f
  %7 = zext i8 %5 to i32
  %8 = icmp sgt i32 %7, %6
  store i1 %8, i1* %a
  %9 = load i32, i32* %f
  %10 = load i8, i8* %d
  %11 = zext i8 %10 to i32
  %12 = icmp sle i32 %9, %11
  store i1 %12, i1* %a
  %13 = load i32, i32* %f
  %14 = load i8, i8* %d
  %15 = zext i8 %14 to i32
  %16 = icmp sge i32 %13, %15
  store i1 %16, i1* %a
  %17 = load i32, i32* %f
  %18 = load i8, i8* %d
  %19 = zext i8 %18 to i32
  %20 = icmp ne i32 %17, %19
  store i1 %20, i1* %a
  %21 = load i32, i32* %f
  %22 = load i8, i8* %d
  %23 = zext i8 %22 to i32
  %24 = icmp eq i32 %21, %23
  store i1 %24, i1* %a
  %25 = load i1, i1* %a
  %26 = zext i1 %25 to i32
  ret i32 %26
}
