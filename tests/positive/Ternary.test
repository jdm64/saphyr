
struct S
{
	int a, b;
}

int four()
{
	S z;
	return 4? 5 : z.a;
}

int func()
{
	int x = 4;
	return x > 3? func() : four(); 
}

int main()
{
	int x = 5;

	auto f = x < 10? 1.0 : 3.5;
	auto z = f > 10? 4 + f : x + 1.0;

	return z;
}

@int getPtr()
{
	return null;
}

void callPtr(bool b)
{
	auto ptr = b ? getPtr() : null;
}

========

%S = type { i32, i32 }

define i32 @four() {
  %z = alloca %S
  br i1 true, label %1, label %2

1:                                                ; preds = %0
  br label %5

2:                                                ; preds = %0
  %3 = getelementptr %S, %S* %z, i32 0, i32 0
  %4 = load i32, i32* %3
  br label %5

5:                                                ; preds = %2, %1
  %6 = phi i32 [ 5, %1 ], [ %4, %2 ]
  ret i32 %6
}

define i32 @func() {
  %x = alloca i32
  store i32 4, i32* %x
  %1 = load i32, i32* %x
  %2 = icmp sgt i32 %1, 3
  br i1 %2, label %3, label %5

3:                                                ; preds = %0
  %4 = call i32 @func()
  br label %7

5:                                                ; preds = %0
  %6 = call i32 @four()
  br label %7

7:                                                ; preds = %5, %3
  %8 = phi i32 [ %4, %3 ], [ %6, %5 ]
  ret i32 %8
}

define i32 @main() {
  %x = alloca i32
  store i32 5, i32* %x
  %1 = load i32, i32* %x
  %2 = icmp slt i32 %1, 10
  %3 = select i1 %2, double 1.000000e+00, double 3.500000e+00
  %f = alloca double
  store double %3, double* %f
  %4 = load double, double* %f
  %5 = fcmp ogt double %4, 1.000000e+01
  br i1 %5, label %6, label %9

6:                                                ; preds = %0
  %7 = load double, double* %f
  %8 = fadd double 4.000000e+00, %7
  br label %13

9:                                                ; preds = %0
  %10 = load i32, i32* %x
  %11 = sitofp i32 %10 to double
  %12 = fadd double %11, 1.000000e+00
  br label %13

13:                                               ; preds = %9, %6
  %14 = phi double [ %8, %6 ], [ %12, %9 ]
  %z = alloca double
  store double %14, double* %z
  %15 = load double, double* %z
  %16 = fptosi double %15 to i32
  ret i32 %16
}

define i32* @getPtr() {
  ret i32* null
}

define void @callPtr(i1 %b) {
  %1 = alloca i1
  store i1 %b, i1* %1
  %2 = load i1, i1* %1
  br i1 %2, label %3, label %5

3:                                                ; preds = %0
  %4 = call i32* @getPtr()
  br label %6

5:                                                ; preds = %0
  br label %6

6:                                                ; preds = %5, %3
  %7 = phi i32* [ %4, %3 ], [ null, %5 ]
  %ptr = alloca i32*
  store i32* %7, i32** %ptr
  ret void
}

========

callPtr T
four T
func T
getPtr T
main T
