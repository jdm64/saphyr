
class Copy
{
	struct this
	{
		@[]int ptr;
		int size;
	}

	this(int size)
	size{size}
	{
		ptr = new [size]int;
	}

	#[mangle("this2")]
	this($Copy other)
	{
		ptr = new [other.size]int;
		size = other.size;

		for (int i = 0; i < size; i++)
			ptr[i] = other.ptr[i];
	}

	~this()
	{
		delete ptr;
	}
}

Copy doCopy()
{
	Copy a{4};
	return a->copy;
}

Copy doMove()
{
	Copy b{5};
	return b->move;
}

========

%Copy = type { [0 x i32]*, i32 }

define void @Copy_this(%Copy* %this, i32 %size) {
  %1 = alloca %Copy*
  store %Copy* %this, %Copy** %1
  %2 = alloca i32
  store i32 %size, i32* %2
  %3 = load %Copy*, %Copy** %1
  %4 = getelementptr %Copy, %Copy* %3, i32 0, i32 1
  %5 = load i32, i32* %2
  store i32 %5, i32* %4
  %6 = load %Copy*, %Copy** %1
  %7 = getelementptr %Copy, %Copy* %6, i32 0, i32 0
  %8 = load i32, i32* %2
  %9 = sext i32 %8 to i64
  %10 = mul i64 4, %9
  %11 = call i8* @malloc(i64 %10)
  %12 = bitcast i8* %11 to [0 x i32]*
  store [0 x i32]* %12, [0 x i32]** %7
  ret void
}

define void @Copy_this2(%Copy* %this, %Copy* %other) {
  %1 = alloca %Copy*
  store %Copy* %this, %Copy** %1
  %2 = alloca %Copy*
  store %Copy* %other, %Copy** %2
  %3 = load %Copy*, %Copy** %1
  %4 = getelementptr %Copy, %Copy* %3, i32 0, i32 0
  %5 = load %Copy*, %Copy** %2
  %6 = getelementptr %Copy, %Copy* %5, i32 0, i32 1
  %7 = load i32, i32* %6
  %8 = sext i32 %7 to i64
  %9 = mul i64 4, %8
  %10 = call i8* @malloc(i64 %9)
  %11 = bitcast i8* %10 to [0 x i32]*
  store [0 x i32]* %11, [0 x i32]** %4
  %12 = load %Copy*, %Copy** %1
  %13 = getelementptr %Copy, %Copy* %12, i32 0, i32 1
  %14 = load %Copy*, %Copy** %2
  %15 = getelementptr %Copy, %Copy* %14, i32 0, i32 1
  %16 = load i32, i32* %15
  store i32 %16, i32* %13
  %i = alloca i32
  store i32 0, i32* %i
  br label %17

17:                                               ; preds = %37, %0
  %18 = load i32, i32* %i
  %19 = load %Copy*, %Copy** %1
  %20 = getelementptr %Copy, %Copy* %19, i32 0, i32 1
  %21 = load i32, i32* %20
  %22 = icmp slt i32 %18, %21
  br i1 %22, label %23, label %40

23:                                               ; preds = %17
  %24 = load i32, i32* %i
  %25 = load %Copy*, %Copy** %1
  %26 = getelementptr %Copy, %Copy* %25, i32 0, i32 0
  %27 = load [0 x i32]*, [0 x i32]** %26
  %28 = sext i32 %24 to i64
  %29 = getelementptr [0 x i32], [0 x i32]* %27, i32 0, i64 %28
  %30 = load i32, i32* %i
  %31 = load %Copy*, %Copy** %2
  %32 = getelementptr %Copy, %Copy* %31, i32 0, i32 0
  %33 = load [0 x i32]*, [0 x i32]** %32
  %34 = sext i32 %30 to i64
  %35 = getelementptr [0 x i32], [0 x i32]* %33, i32 0, i64 %34
  %36 = load i32, i32* %35
  store i32 %36, i32* %29
  br label %37

37:                                               ; preds = %23
  %38 = load i32, i32* %i
  %39 = add i32 %38, 1
  store i32 %39, i32* %i
  br label %17

40:                                               ; preds = %17
  ret void
}

define void @Copy_null(%Copy* %this) {
  %1 = alloca %Copy*
  store %Copy* %this, %Copy** %1
  %2 = load %Copy*, %Copy** %1
  %3 = getelementptr %Copy, %Copy* %2, i32 0, i32 0
  %4 = load [0 x i32]*, [0 x i32]** %3
  %5 = bitcast [0 x i32]* %4 to i8*
  call void @free(i8* %5)
  ret void
}

declare i8* @malloc(i64)

declare void @free(i8*)

define %Copy @doCopy() {
  %a = alloca %Copy
  call void @Copy_this(%Copy* %a, i32 4)
  %tmp_359 = alloca %Copy
  call void @Copy_this2(%Copy* %tmp_359, %Copy* %a)
  %1 = load %Copy, %Copy* %tmp_359
  call void @Copy_null(%Copy* %a)
  ret %Copy %1
}

define %Copy @doMove() {
  %b = alloca %Copy
  call void @Copy_this(%Copy* %b, i32 5)
  %1 = load %Copy, %Copy* %b
  ret %Copy %1
}

========

Copy_null T
Copy_this T
Copy_this2 T
doCopy T
doMove T
free U
malloc U
