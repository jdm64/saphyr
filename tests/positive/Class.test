
class Test
{
	struct this
	{
		int a;
		int b;
	}

	int run(int c)
	{
		return a + c;
	}

	Test copy()
	{
		return this@;
	}

	@this getThis()
	{
		return this;
	}
}

class Empty
{
	int run()
	{
		return 3;
	}

	int foo()
	{
		return 5 + run();
	}
}

void func()
{
	Test a;

	a.copy().run(3);
	a.getThis().run(5);
}

void func2()
{
	@Test b;

	b.copy().run(7);
	b.getThis().run(9);
}

int func3()
{
	Empty e;

	return e.run();
}

int main()
{
	Test x;
	@Test y = new Test;

	x.run(3);
	y.run(5);

	return 0;
}

========

%Test = type { i32, i32 }
%Empty = type { i8 }

define i32 @Test_run(%Test* %this, i32 %c) {
  %1 = alloca %Test*
  store %Test* %this, %Test** %1
  %2 = alloca i32
  store i32 %c, i32* %2
  %3 = load %Test*, %Test** %1
  %4 = getelementptr %Test, %Test* %3, i32 0, i32 0
  %5 = load i32, i32* %4
  %6 = load i32, i32* %2
  %7 = add i32 %5, %6
  ret i32 %7
}

define %Test @Test_copy(%Test* %this) {
  %1 = alloca %Test*
  store %Test* %this, %Test** %1
  %2 = load %Test*, %Test** %1
  %3 = load %Test, %Test* %2
  ret %Test %3
}

define %Test* @Test_getThis(%Test* %this) {
  %1 = alloca %Test*
  store %Test* %this, %Test** %1
  %2 = load %Test*, %Test** %1
  ret %Test* %2
}

define i32 @Empty_run(%Empty* %this) {
  %1 = alloca %Empty*
  store %Empty* %this, %Empty** %1
  ret i32 3
}

define i32 @Empty_foo(%Empty* %this) {
  %1 = alloca %Empty*
  store %Empty* %this, %Empty** %1
  %2 = load %Empty*, %Empty** %1
  %3 = call i32 @Empty_run(%Empty* %2)
  %4 = add i32 5, %3
  ret i32 %4
}

define void @func() {
  %a = alloca %Test
  %1 = call %Test @Test_copy(%Test* %a)
  %2 = alloca %Test
  store %Test %1, %Test* %2
  %3 = call i32 @Test_run(%Test* %2, i32 3)
  %4 = call %Test* @Test_getThis(%Test* %a)
  %5 = alloca %Test*
  store %Test* %4, %Test** %5
  %6 = load %Test*, %Test** %5
  %7 = call i32 @Test_run(%Test* %6, i32 5)
  ret void
}

define void @func2() {
  %b = alloca %Test*
  %1 = load %Test*, %Test** %b
  %2 = call %Test @Test_copy(%Test* %1)
  %3 = alloca %Test
  store %Test %2, %Test* %3
  %4 = call i32 @Test_run(%Test* %3, i32 7)
  %5 = load %Test*, %Test** %b
  %6 = call %Test* @Test_getThis(%Test* %5)
  %7 = alloca %Test*
  store %Test* %6, %Test** %7
  %8 = load %Test*, %Test** %7
  %9 = call i32 @Test_run(%Test* %8, i32 9)
  ret void
}

define i32 @func3() {
  %e = alloca %Empty
  %1 = call i32 @Empty_run(%Empty* %e)
  ret i32 %1
}

define i32 @main() {
  %x = alloca %Test
  %1 = call i8* @malloc(i64 8)
  %2 = bitcast i8* %1 to %Test*
  %y = alloca %Test*
  store %Test* %2, %Test** %y
  %3 = call i32 @Test_run(%Test* %x, i32 3)
  %4 = load %Test*, %Test** %y
  %5 = call i32 @Test_run(%Test* %4, i32 5)
  ret i32 0
}

declare i8* @malloc(i64)

========

Empty_foo T
Empty_run T
func T
func2 T
func3 T
main T
malloc U
Test_copy T
Test_getThis T
Test_run T
