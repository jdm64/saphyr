language: cpp
dist: xenial
os: linux

jobs:
   include:
    - compiler: clang
      env: LLVM_VER="-8" PACKAGE=true
    - compiler: clang
      env: LLVM_VER="-9"
    - compiler: gcc
      env: LLVM_VER="-10" COVERAGE=true
    - compiler: clang
      env: LLVM_VER="-11"

addons:
   apt:
      sources:
       - sourceline: "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-9 main"
         key_url: "https://apt.llvm.org/llvm-snapshot.gpg.key"
       - sourceline: "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-10 main"
         key_url: "https://apt.llvm.org/llvm-snapshot.gpg.key"
       - sourceline: "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-11 main"
         key_url: "https://apt.llvm.org/llvm-snapshot.gpg.key"
      packages:
       - llvm-8-dev
       - llvm-9-dev
       - llvm-10-dev
       - llvm-11-dev
       - flexc++
       - bisonc++
       - libboost-program-options-dev
       - libboost-filesystem-dev
       - python3
       - binutils
       - patchelf
   sonarcloud:
      organization: "jdm64"
      token:
         secure: $SONAR_TOKEN

before_install:
 - bash <(wget -qO- https://raw.githubusercontent.com/jdm64/saphyr-libs/master/setup.sh)
 - if [[ $LLVM_VER == "-9" ]] || [[ $LLVM_VER == "-10" ]] || [[ $LLVM_VER == "-11" ]]; then VER=${LLVM_VER:1} ; echo "UNITTEST_ARG = +$VER-8" > src/Configfile ; fi
 - if [[ $PACKAGE ]]; then echo -e "STATIC_BOOST=true" >> src/Configfile ; fi
 - if [[ $COVERAGE ]]; then sudo pip install -U cpp-coveralls ; export BUILD_PREFIX="build-wrapper-linux-x86-64 --out-dir bw-output" ; fi

script: cd src && make frontend && $BUILD_PREFIX make -j2 tests

after_success:
 - if [[ $COVERAGE ]]; then coveralls --gcov-options '\-lp' -t $COV_TOKEN -e scanner.cpp -e scanner.h -e scannerbase.h -e parser.cpp -e parser.h -e parser.ih -e parserbase.h; sonar-scanner -Dproject.settings=../sonar-project.properties ; fi
 - if [[ $PACKAGE ]]; then cd ../scripts/ ; ./build-AppImage.sh ; ./build-deb.sh ; wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh ; bash upload.sh saphyr-x86_64.AppImage saphyr.deb ; fi

branches:
   except:
    - /^(?i:continuous)$/
    - /^.*(?i:patch)$/
